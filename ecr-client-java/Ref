package org.payable.ecrclient;

import org.java_websocket.WebSocket;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Scanner;

public class MySocketWebServer extends Thread {

    ServerSocket serverSocket;

    @Override
    public void run() {

        try {

            serverSocket = new ServerSocket(8080);

            while (true) {

                final Socket socket = serverSocket.accept();
                // ECRService.buzz(50);

                new Thread(new Runnable() {
                    @Override
                    public void run() {

                        try {

                            BufferedReader br = new BufferedReader(new InputStreamReader(socket.getInputStream()));
                            PrintWriter os = new PrintWriter(socket.getOutputStream(), true);

                            String headerLine = null;
                            while ((headerLine = br.readLine()).length() != 0) {
                                System.out.println(headerLine);
                            }

                            StringBuilder payload = new StringBuilder();
                            while (br.ready()) {
                                payload.append((char) br.read());
                            }

                            System.out.println("Payload data is: " + payload.toString());

                            StringBuilder sb = new StringBuilder();
                            Scanner scanner = new Scanner(getClass().getClassLoader().getResourceAsStream("server.html"));
                            while (scanner.hasNextLine()) {
                                sb.append(scanner.nextLine());
                                sb.append('\n');
                            }
                            String response = sb.toString();
                            response = response.replaceAll("%VERSION%", "v1.5");
                            response = response.replaceAll("%TERMINAL%", StaticMemory.connectedTerminal == null ? "NULL" : StaticMemory.connectedTerminal);

                            os.print("HTTP/1.0 200" + "\r\n");
                            os.print("Content type: text/html" + "\r\n");
                            os.print("Content length: " + response.length() + "\r\n");
                            os.print("\r\n");
                            os.print(response + "\r\n");
                            os.flush();
                            socket.close();

                        } catch (IOException ex) {
                            ex.printStackTrace();
                        }

                    }

                }).start();
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    @Override
    public void interrupt() {
        try {
            serverSocket.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        super.interrupt();
    }
}